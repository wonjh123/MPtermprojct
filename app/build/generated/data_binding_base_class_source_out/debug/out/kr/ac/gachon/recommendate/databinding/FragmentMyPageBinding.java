// Generated by view binder compiler. Do not edit!
package kr.ac.gachon.recommendate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.gachon.recommendate.R;

public final class FragmentMyPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnLastDate;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnMyTags;

  @NonNull
  public final View dividerProfileInfo;

  @NonNull
  public final RelativeLayout layoutProfileInfo;

  @NonNull
  public final ImageView profileImageView;

  @NonNull
  public final TextView textUserName;

  private FragmentMyPageBinding(@NonNull LinearLayout rootView, @NonNull Button btnLastDate,
      @NonNull Button btnLogout, @NonNull Button btnMyTags, @NonNull View dividerProfileInfo,
      @NonNull RelativeLayout layoutProfileInfo, @NonNull ImageView profileImageView,
      @NonNull TextView textUserName) {
    this.rootView = rootView;
    this.btnLastDate = btnLastDate;
    this.btnLogout = btnLogout;
    this.btnMyTags = btnMyTags;
    this.dividerProfileInfo = dividerProfileInfo;
    this.layoutProfileInfo = layoutProfileInfo;
    this.profileImageView = profileImageView;
    this.textUserName = textUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_last_date;
      Button btnLastDate = ViewBindings.findChildViewById(rootView, id);
      if (btnLastDate == null) {
        break missingId;
      }

      id = R.id.btn_logout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btn_my_tags;
      Button btnMyTags = ViewBindings.findChildViewById(rootView, id);
      if (btnMyTags == null) {
        break missingId;
      }

      id = R.id.divider_profile_info;
      View dividerProfileInfo = ViewBindings.findChildViewById(rootView, id);
      if (dividerProfileInfo == null) {
        break missingId;
      }

      id = R.id.layout_profile_info;
      RelativeLayout layoutProfileInfo = ViewBindings.findChildViewById(rootView, id);
      if (layoutProfileInfo == null) {
        break missingId;
      }

      id = R.id.profileImageView;
      ImageView profileImageView = ViewBindings.findChildViewById(rootView, id);
      if (profileImageView == null) {
        break missingId;
      }

      id = R.id.text_user_name;
      TextView textUserName = ViewBindings.findChildViewById(rootView, id);
      if (textUserName == null) {
        break missingId;
      }

      return new FragmentMyPageBinding((LinearLayout) rootView, btnLastDate, btnLogout, btnMyTags,
          dividerProfileInfo, layoutProfileInfo, profileImageView, textUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
